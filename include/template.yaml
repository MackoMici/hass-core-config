template:
  - sensor:
      - name: "Bejárati Ajtó Battery"
        unit_of_measurement: "%"
        state_class: measurement
        device_class: battery
        availability: >
          {{ states('sensor.sonoff_bejarati_ajto_battery_voltage') not in ['unavailable', 'unknown'] }}      
        state: >
          {% if states('sensor.sonoff_bejarati_ajto_battery_voltage') != None %}
            {% set min = 1.87 | float(2) %}
            {% set current = states('sensor.sonoff_bejarati_ajto_battery_voltage') | float(2) %}
            {{ ((current - min) / 0.011) | int }}
          {% endif %}
  
      - name: "Home Assistant Uptime"
        icon: mdi:history
        state: >
          {% set mins = (as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) | int // 60 %}
          {% set hours = mins // 60 %}
          {% set days = mins // 1440 %}
          {% if days > 1 %}
            {{ days }} napja
          {% elif hours > 1 %}
            {{ hours }} órája
          {% else %}
            {{ mins }} perce
          {% endif %}

      - name: "Debian Server Uptime"
        icon: mdi:history
        state: >
          {% set mins = (as_timestamp(now()) - as_timestamp(states('sensor.last_boot'))) | int // 60 %}
          {% set hours = mins // 60 %}
          {% set days = mins // 1440 %}
          {% if days > 1 %}
            {{ days }} napja
          {% elif hours > 1 %}
            {{ hours }} órája
          {% else %}
            {{ mins }} perce
          {% endif %}
  
      - name: "Mikrotik Router Uptime"
        icon: mdi:history
        state: >
          {% set mins = (as_timestamp(now()) - as_timestamp(states('sensor.mikrotik_hap_ac_2_uptime'))) | int // 60 %}
          {% set hours = mins // 60 %}
          {% set days = mins // 1440 %}
          {% if days > 1 %}
            {{ days }} napja
          {% elif hours > 1 %}
            {{ hours }} órája
          {% else %}
            {{ mins }} perce
          {% endif %}

      - name: "HiPad XPro Tablet Uptime"
        icon: mdi:history
        availability: >
          {{ states('sensor.hipad_xpro_last_reboot') not in ['unavailable', 'unknown'] }}
        state: >
          {% set mins = (as_timestamp(now()) - as_timestamp(states('sensor.hipad_xpro_last_reboot'))) | int // 60 %}
          {% set hours = mins // 60 %}
          {% set days = mins // 1440 %}
          {% if days > 1 %}
            {{ days }} napja
          {% elif hours > 1 %}
            {{ hours }} órája
          {% else %}
            {{ mins }} perce
          {% endif %}

      - name: "Tablet App Uptime"
        icon: mdi:history
        availability: >
          {{ states('sensor.ha_tablet_last_app_start') not in ['unavailable', 'unknown'] }}
        state: >
          {% set mins = (as_timestamp(now()) - as_timestamp(states('sensor.ha_tablet_last_app_start'))) | int // 60 %}
          {% set hours = mins // 60 %}
          {% set days = mins // 1440 %}
          {% if days > 1 %}
            {{ days }} napja
          {% elif hours > 1 %}
            {{ hours }} órája
          {% else %}
            {{ mins }} perce
          {% endif %}

      - name: "HiPad XPro Tablet Storage"
        availability: >
          {{ (states('sensor.hipad_xpro_belso_tarhely_szabad') or states('sensor.hipad_xpro_belso_tarhely_kapacitas')) not in ['unavailable', 'unknown'] }}
        state: >
          {% set FreeSpace = states('sensor.hipad_xpro_belso_tarhely_szabad') | float(default=0) %}
          {% set TotalSpace = states('sensor.hipad_xpro_belso_tarhely_kapacitas') | float(default=0) %}
          {% if not (FreeSpace == 0.0 or TotalSpace == 0.0) %}
            {{ 100 - (FreeSpace / TotalSpace * 100) | int(default=0) }}
          {% endif %}
        icon: mdi:sd
        unit_of_measurement: '%'
        state_class: measurement

      - name: "HiPad XPro Tablet Memory"
        availability: >
          {{ (states('sensor.hipad_xpro_szabad_memoria') or states('sensor.hipad_xpro_teljes_memoria')) not in ['unavailable', 'unknown'] }} 
        state: >
          {% set FreeMemory = states('sensor.hipad_xpro_szabad_memoria') | float(default=0) %}
          {% set TotalMemory = states('sensor.hipad_xpro_teljes_memoria') | float(default=0) %}
          {% if not (FreeMemory == 0.0 or TotalMemory == 0.0) %}
            {{ 100 - (FreeMemory / TotalMemory * 100) | int(default=0) }}
          {% endif %}
        icon: mdi:memory
        unit_of_measurement: '%'
        state_class: measurement

      - name: "Devices with Low Battery"
        unit_of_measurement: devices
        state: >
          {{ states.sensor
            | selectattr('attributes.device_class', 'defined')
            | selectattr('attributes.device_class', 'eq', 'battery')
            | rejectattr('entity_id', 'search', 'battery_level')
            | map(attribute = 'state')
            | map('int', -1)
            | select('lessthan', states('input_number.battery_threshold') | int)
            | list
            | count }}
        icon: >
          {% if is_state('sensor.devices_with_low_battery', 0) %}
            mdi:battery-check
          {% else %}
            mdi:battery-alert
          {% endif %}

      - name: "Növény probléma"
        icon: mdi:flower
        availability: >
          {{ states('plant.new_zealand_spinach') not in ['unavailable', 'unknown'] }}
        state: >
          {% set problem = 0 | int %}
          {% if not is_state_attr('plant.new_zealand_spinach', 'moisture_status', 'ok') %}
            {% set problem = problem + 1 | int %}
          {% endif %}
          {% if not is_state_attr('plant.new_zealand_spinach', 'temperature_status', 'ok') %}
            {% set problem = problem + 1 | int %}
          {% endif %}
          {% if not is_state_attr('plant.new_zealand_spinach', 'conductivity_status', 'ok') %}
            {% set problem = problem + 1 | int %}
          {% endif %}
          {% if not is_state_attr('plant.new_zealand_spinach', 'illuminance_status', 'ok') %}
            {% set problem = problem + 1 | int %}
          {% endif %}
          {% if not is_state_attr('plant.new_zealand_spinach', 'humidity_status', 'ok') %}
            {% set problem = problem + 1 | int %}
          {% endif %}
          {{ problem | int }}

      - name: "Week Day"
        state: >
          {%- set days = ['Hétfő', 'Kedd', 'Szerda', 'Csütörtök', 'Péntek', 'Szombat', 'Vasárnap'] %}
          {{ days[now().weekday()]}}
  
      - name: "Current Date"
        state: >
          {%- set months = ['Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December'] %}
          {{ (now().timestamp() | timestamp_custom('%d, # %Y')).replace('#', months[now().month-1]) }}
  
      - name: "Hunyadvári Zoltán Wifi"
        state: >
          {% if states('sensor.sm_a536b_wifi_connection') == "MiciMacko 5GHz" %}
            home
          {% else %}
            not_home
          {% endif %}
  
      - name: "Szakacs Katalin Wifi"
        state: >
          {% if states('sensor.sm_a336b_wifi_connection') == "MiciMacko 5GHz" %}
            home
          {% else %}
            not_home
          {% endif %}

      - name: "MetNo Temperature"
        unit_of_measurement: '°C'
        state_class: 'measurement'
        state: >
          {{ state_attr('weather.forecast_home', 'temperature') }}

      - name: "MetNo Humidity"
        unit_of_measurement: '%'
        state_class: 'measurement'
        state: >
          {{ state_attr('weather.forecast_home', 'humidity') }} 
  
  - trigger:
      - platform: time_pattern
        hours: 0
        minutes: 0
    
    sensor:
      - name: "Napkelte"
        state: >
          {{ states('sensor.sun_next_rising') }}
  
      - name: "Napnyugta"
        state: >
          {{ states('sensor.sun_next_setting') }}
